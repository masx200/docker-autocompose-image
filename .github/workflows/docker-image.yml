name: Docker Image CI

on:
    schedule:
        - cron: "0 5 * * *"
    push:
        branches: ["master"]
    pull_request:
        branches: ["master"]

jobs:
    build:
        strategy:
            matrix:
                node-version: [22.x]
        runs-on: ubuntu-latest

        steps:
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node-version }}
            # - name: Install Deno
            #   uses: denoland/setup-deno@v2
            #   with:
            #       deno-version: v2.x
            - uses: actions/checkout@v4
            - name: Set up QEMU
              uses: docker/setup-qemu-action@v2
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2
            - run: pnpm install --force
            #deno cache --allow-import build.ts
            # - run: deno  install --allow-scripts ||deno -v
            #   - name: sudo
            #     run: |
            #       sudo apt update
            #       sudo apt install -y sudo
            #   - run: sudo apt update
            #   - name: Build the Docker image
            #     run: |

            #       sudo apt install dos2unix -y
            #       sudo apt clean

            #       bash -c "find . -maxdepth 1 -type f -name \"*.sh\" -exec dos2unix {} \;"
            #       sh build.sh
            - run: npx ts-node build.ts
            - run: mkdir -p ./dist
            - run: docker images
            #   - name: Build and save
            #     env:
            #       PACKAGE_NAME: "docker-squash"
            #     run: |
            #       VERSION=$(curl -s https://pypi.org/pypi/$PACKAGE_NAME/json | jq -r '.info.version')

            #       # 检查是否成功获取版本号
            #       if [ -z "$VERSION" ]; then
            #           echo "Failed to fetch version for package: $PACKAGE_NAME"
            #           exit 1
            #       else
            #           echo "The latest version of $PACKAGE_NAME is $VERSION"
            #       fi
            #       docker save masx200/docker-squash:$VERSION | gzip > ./dist/masx200-docker-squash-$VERSION-image.tgz

            - name: Release
              uses: softprops/action-gh-release@v2
              if: startsWith(github.ref, 'refs/heads/master')
              with:
                  tag_name: Continuous-integration-${{ github.sha }}
                  #token: ${{ secrets.CUSTOM_GITHUB_TOKEN }}
                  files: |
                      ./dist/*.tgz
